<?php
/**
 * Created by PhpStorm.
 * User: Михаил
 * Date: 2/4/2020
 * Time: 12:17 PM
 */

//НАЙТИ ИМЯ НАСЛЕДНИКА getTableName()

abstract class Model
{
    public $id;

    public function findAll($columnValue = [])
    {
        $table = $this->getClassName(); // TODO: Change the autogenerated stub
        $sql = sql::select($table, $columnValue);
        return $sql;
    }

    function findOne($columnValue = [])
    {
        $table = $this->getClassName(); // TODO: Change the autogenerated stub
        $sql = sql::selectOne($table, $columnValue);
        //TODO: $sql = sql::selectOne($table, $columnValue);
        //de(sql::select($table,$columnValue));

        //todo USE $this->load($sql)
        //$this->load($sql);
        $this->load($sql);
        return $sql;
    }

    function load($fieldData = null)
    {

        // заполняем значения разбивая массив
        foreach ($fieldData as $key => $value) {
            $this->$key = $value;
        }
        //de($this);

    }

    function save($updateValue = [])
    {
        $updateValue = $this->get_object_mass();
        $fieldValue = $this->get_object_mass();
        $table = $this->getClassName();
        if (is_null($fieldValue['id'])) {
            array_shift($fieldValue);
            $insertId= sql::insert($table, $fieldValue);
            $this->load($fieldValue);
            $this->id = $insertId;
        } elseif ($fieldValue['id']) {
            //de($this);
            sql::update($table,$updateValue, $fieldValue['id']);
            $this->load($updateValue);
        } else {
            return false;
        }
    }

    function get_object_mass()
    {
        $mass = get_object_vars($this);
        return $mass;
    }

    protected function getClassName()
    {
        $mass = strtolower(explode("Model_", get_class($this))[1]);
        return $mass;

    }

}
